akka {
    extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

    actor {
        provider = "akka.remote.RemoteActorRefProvider"

#        serialize-messages = on

        default-dispatcher {
            #executor = "thread-pool-executor"
            throughput = 500
            mailbox-capacity = 1000
            mailbox-push-timeout-time = -1
        }

        kryo  {
            type = "nograph"
            idstrategy = "incremental"
            serializer-pool-size = 32
            buffer-size = 100000000
            classes = [
                "ru.ifmo.genome.dna.Long1DNASeq",
                "ru.ifmo.genome.ds.Messages$size",
                "ru.ifmo.genome.ds.Messages$contains",
                "ru.ifmo.genome.ds.Messages$update1",
                "ru.ifmo.genome.ds.Messages$putNew",
                "ru.ifmo.genome.ds.Messages$getAll",
                "ru.ifmo.genome.data.graph.NodeGraphPosition",
                "ru.ifmo.genome.data.graph.EdgeGraphPosition",
                "ru.ifmo.genome.data.FreqFilter$$anonfun$add$1$1$$anonfun$apply$1",
                "scala.collection.immutable.$colon$colon",
                "scala.collection.immutable.Nil$",
            ]
        }

        serializers {
            kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
        }

        serialization-bindings {
            "java.io.Serializable" = kryo
            "scala.Function0" = kryo
        }

        typed {
            timeout = 1000000000
        }
    }

    remote {
        transport = "akka.remote.netty.NettyRemoteTransport"
        netty {
            hostname = "127.0.0.1"
            port = 2553
            backoff-timeout = 1000s
            #max-channel-memory-size = 10MiB
            max-total-memory-size = 256MiB
        }
    }
}

genome {
    storageNodes = [
        "akka://default@192.168.0.114:2552",
        #"akka://default@192.168.0.114:2552",
        #"akka://default@127.0.0.1:2552",
        #"akka://default@127.0.0.1:2552"
    ]
    chunkSize = 64
    takeFirst = 8326576
    cutoff = 200
}
#Exception in thread "main" java.lang.AssertionError: assertion failed: Edge(99439,97633,135135,CGCGGTAAAGACGTGCAATACCTTGCCCATGACTGCCGACCTACCGTACCCCGGAAGGAACCATCACTGCTTTTATGCATATGGTGGAGTACCGGCGTAATCAGAAGCAACTACGCGAAACGCCGGCGTTGCCCAGCAATCTGACTTCCAATACCG) Node(97633,TGCGGCGAGCACTCCTCGC,Set(92401),Map(C -> 99440)) Node(135135,AATCTGACTTCCAATACCG,Set(99439, 465942),Map(C -> 137430))