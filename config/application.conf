akka {
    extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

    actor {
        provider = "akka.remote.RemoteActorRefProvider"

        serialize-messages = on

        default-dispatcher {
            #executor = "thread-pool-executor"
            throughput = 100
            mailbox-capacity = 100
            mailbox-push-timeout-time = -1
        }

        kryo  {
            type = "nograph"
            idstrategy = "default"
            serializer-pool-size = 32
            buffer-size = 4096
            implicit-registration-logging = true
        }

        serializers {
            kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
        }

        serialization-bindings {
            "java.io.Serializable" = kryo
        }

        typed {
            timeout = 1000000000
        }
    }

    remote {
        transport = "akka.remote.netty.NettyRemoteTransport"
        netty {
            hostname = "127.0.0.1"
            port = 2552
            
        }
    }
}

genome {
    storageNodes = [
        "akka://default@192.168.0.10:2552",
        "akka://default@192.168.0.10:2552",
        "akka://default@192.168.0.9:2552",
        "akka://default@192.168.0.9:2552",
        "akka://default@192.168.0.9:2552",
        "akka://default@192.168.0.9:2552",
        "akka://default@192.168.0.89:2552",
        "akka://default@192.168.0.89:2552",
        "akka://default@192.168.0.86:2552",
        "akka://default@192.168.0.86:2552",
    ]
    inputFile = "data/ecoli"
    outputFile = "data/graph"
    chunkSize = 64
}
